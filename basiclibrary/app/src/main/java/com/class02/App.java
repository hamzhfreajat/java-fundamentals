/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.class02;

import java.util.Random;

public class App {


    public static void main(String[] args) {
//        int[][] weeklyMonthTemperatures = {
//                {66, 64, 58, 65, 71, 57, 60},
//                {57, 65, 65, 70, 72, 65, 51},
//                {55, 54, 60, 53, 59, 57, 61},
//                {65, 56, 55, 52, 55, 62, 57}
//        };
        int[] testArr = {1,2,3,4,5};
        int[] arr = insertShiftArray(testArr,6);
        System.out.println("hi");


    }

    public static int[] roll(int n){
        int rolls[] = new int[n];

        for (int index = 0 ; index < n ; index++){
            Random rand = new Random();
            rolls[index] = rand.nextInt((6 - 1) + 1)+1;
        }

        return rolls;
    }

    public static boolean containsDuplicates(int[] arr){
        boolean flag = false;
        for (int index = 0 ; index < arr.length ; index++ ) {
            for (int j = 0 ; j < arr.length ; j++) {
                if( index != j) {
                    if(arr[j] == arr[index]){
                        flag = true;
                        break;
                    }
                }
            }
        }
        return flag;
    }

    public static int calculateAverage(int[] arr) {
        int sum = 0;
        for (int elemnt : arr
        ) {
            sum += elemnt;
        }
        return Math.floorDiv(sum, arr.length);
    }

    public static int[] avgArrOfArr(int[][] arr){
        int[] newArr = new int[arr.length];
        for (int index = 0 ; index < arr.length ; index++) {
            newArr[index] = calculateAverage(arr[index]);
        }
        return newArr;
    }

    public static int[] insertShiftArray(int[] arr , int n){
        int len = arr.length + 1 ;
        int[] newArr = new int[len];
        int counter = 0;

        for (int index = 0 ; index < len-1 ; index++){
            if(counter == len/2){
                newArr[counter] = n;
                index--;
                counter++;
                continue;
            }
            newArr[counter] = arr[index];
            counter++;
        }
        return newArr;
    }

}
